name: CI/CD Pipeline

on:
  push:
    branches: [main, develop, beta]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '22.17.0'

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Volta
        uses: volta-cli/action@v4

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npm run format:check

      - name: TypeScript type check
        run: npx tsc --noEmit

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Volta
        uses: volta-cli/action@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          flags: unittests
          name: codecov-umbrella

  build-test:
    name: Build and Integration Test
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Volta
        uses: volta-cli/action@v4

      - name: Install dependencies
        run: npm ci

      - name: Test CLI installation
        run: |
          npm link
          codeplot --version
          codeplot init
          
      - name: Test bin script directly
        run: |
          node bin/codeplot.js --version
          node bin/codeplot.js init

      - name: Test package.json validity
        run: npm pack --dry-run

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Volta
        uses: volta-cli/action@v4

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, build-test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      repository-projects: write
      checks: write
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Volta
        uses: volta-cli/action@v4
        with:
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Release to NPM
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run semantic-release

      - name: Setup for GitHub Packages
        uses: volta-cli/action@v4
        with:
          registry-url: 'https://npm.pkg.github.com'

      - name: Prepare GitHub Package
        run: |
          # Get version from main package.json
          VERSION=$(node -p "require('./package.json').version")
          # Update package-github.json with current version
          node -e "const pkg = require('./package-github.json'); pkg.version = process.argv[1]; require('fs').writeFileSync('./package-github.json', JSON.stringify(pkg, null, 2));" "$VERSION"
          cp package-github.json package.json
          cp .npmrc-github .npmrc

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm publish --registry=https://npm.pkg.github.com
